# Задача № 1: Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
#             Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
# Решение:

# инструкция def говорит о том, создается функция, далее следует ее имя, а в () - указываем поступившие параметры
# функция - это часть кода, к которой можно ссылаться из любой части кода
# метод - это тоже самое, что и функция, только она ничего не возвращает
# (a, b) - являются ПАРАМЕТРАМИ функции при ее создании
def division(a, b):
    # конструкция try except - это обработчик исключений (ошибок)
    # проверяем код, который внутри try, если ошибок нет, то просто выполняется код
    # если разделить на 0, то интерпретатор выдаст ошибку 'ZeroDivisionError'
    # c помощью конструкции except перехватываем эту ошибку и возвращаем сообщение о том, что делить на 0 запрещено
    try:
        return a / b  # возвращаем результат выполнения функции

    except ZeroDivisionError:
        return 'делить на ноль запрещено!'  # возвращаем сообщение


x = int(input('Введите, пожалуйста, 1-ое целое число: '))
y = int(input('Введите, пожалуйста, 2-ое целое число: '))

# вызываем функцию т.к. она возвращает значение, то возвращаемое значение присваивается переменной z
# (x, y) - являются АРГУМЕНТАМИ при вызове функции
# (x, y) - являются позиционными аргументами т.к. их позиция строга соблюдена
# значение x передается в первую очередь, y - во вторую
# при этом при создании функции значение, которое мы передали АРГУМЕНТОМ x, стало ПАРАМЕТРОМ a
# при вызове функции передаются не переменные, а их значения
z = division(x, y)

# :.2f - оставляет 2 числа после запятой, округляя крайнее
print(f'Решение: {x} / {y} = {z:.2f}')
